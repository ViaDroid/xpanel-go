# 基本设置--------------------------------------------------------------------------------------------
key: ChangeMe # Cookie加密密钥，请务必修改此key为随机字符串
pwdMethod: bcrypt # 密码加密 可选 bcrypt, argon2i, argon2id
salt: "" # bcrypt/argon2i/argon2id 会忽略此项

debug: false #debug模式开关，生产环境请保持为false
appName: "XPanel-GO" #站点名称
baseUrl: "https://xpanel.example.com" #站点地址，必须以https://开头，不要以/结尾

# WebAPI
webAPI: true #是否开启WebAPI功能
webAPIUrl: "${baseUrl}" #WebAPI地址，如需和站点地址相同，请不要修改
muKey: "ChangeMe" #WebAPI密钥，用于节点服务端与面板通信，请务必修改此key为随机字符串
checkNodeIp: true #是否webapi验证节点ip

#数据库设置-------------------------------------------------------------------------------------------
# db_host|db_socket 二选一，若设置 db_socket 则 db_host 会被忽略，不用请留空
# db_host 例: localhost（可解析的主机名）, 127.0.0.1（IP 地址）
# db_socket 例：/var/run/mysqld/mysqld.sock（需使用绝对地址）
db_host: "127.0.0.1"
db_socket: ""
db_database: "xpanel" #数据库名
db_username: "root" #数据库用户名
db_password: "12345678" #用户密码
db_port: "3306" #端口
#读写分离相关配置
enable_db_rw_split: false #是否开启读写分离
read_db_hosts: [""] #从库地址，可配置多个
write_db_host: "" #主库地址
#高级
db_charset: "utf8mb4"
db_collation: "utf8mb4_unicode_ci"
db_prefix: ""

#Redis设置-------------------------------------------------------------------------------------------
redis_host: "127.0.0.1" #Redis地址，使用unix domain socket时填写文件路径
redis_port: 6379 #Redis端口，使用unix domain socket时填写-1
redis_connect_timeout: 2.0 #Redis连接超时时间，单位秒
redis_read_timeout: 8.0 #Redis读取超时时间，单位秒
redis_username: "" #Redis用户名，留空则不使用用户名连接
redis_password: "" #Redis密码，留空则无密码
# redis_ssl: false #是否使用SSL连接Redis，如果使用了SSL，那么Redis端口应为Redis实例的TLS端口
# redis_ssl_context: [] #使用SSL时的上下文选项，参考 https://www.php.net/manual/zh/context.ssl.php

#Rate Limit设置--------------------------------------------------------------------------------------------
enable_rate_limit: true #是否开启请求限制
# rate_limit_ip: 120 #每分钟每个IP的全局请求限制
rate_limit_sub_ip: 10 # 每分钟每个IP的订阅链接请求限制
rate_limit_sub: 30 #每分钟每个用户的订阅链接请求限制
rate_limit_webapi_ip: 120  # 每分钟每个IP的WebAPI请求限制
rate_limit_webapi: 600 #每分钟每个节点WebAPI密钥请求限制
rate_limit_user_api_ip: 60 # 每分钟每个IP的用户API请求限制
rate_limit_user_api: 60 #每分钟每个用户的API请求限制
rate_limit_admin_api: 60 #每分钟每个管理员的API请求限制
rate_limit_admin_api_ip: 60 # 每分钟每个IP的管理员的API请求限制
rate_limit_node_api_ip: 60  # 每分钟每个IP的节点API请求限制
rate_limit_node_api: 60   # 每分钟每个节点的API请求限制

#邮件设置--------------------------------------------------------------------------------------------
mail_filter: 0 #0: 关闭 1: 白名单模式 2 黑名单模式
mail_filter_list: []

#已注册用户设置---------------------------------------------------------------------------------------
#高级
class_expire_reset_traffic: 0 #等级到期时重置为的流量值，单位GB，小于0时不重置
enable_kill: true #是否允许用户注销账户
enable_change_email: true #是否允许用户更改賬戶郵箱

#用户流量余量不足邮件提醒
notify_limit_mode: false #false为关闭，per为按照百分比提醒，mb为按照固定剩余流量提醒
notify_limit_value: 500 #当上一项为per时，此处填写百分比；当上一项为mb时，此处填写流量

#订阅设置---------------------------------------------------------------------------------------
Subscribe: true #本站是否提供订阅功能
subUrl: "${baseUrl}"  #订阅地址，如需和站点名称相同，请不要修改
sub_token_len: 16 #订阅token长度

#审计自动封禁设置--------------------------------------------------------------------------------------------
auto_detect_ban_allow_admin: true #管理员不受审计限制
auto_detect_ban_allow_users: [] #审计封禁的例外用户 ID
auto_detect_ban_number: 30 #每次执行封禁所需的触发次数
auto_detect_ban_time: 60 #每次封禁的时长 (分钟)

#节点检测-----------------------------------------------------------------------------------------------
#GFW检测
detect_gfw_port: 443 #所有节点服务器都打开的TCP端口
detect_gfw_url: "http://example.com:8080/v1/tcping?ip={ip}&port={port}" #检测节点是否被gfw墙了的API的URL

#离线检测
enable_detect_offline: true

#高级设置-----------------------------------------------------------------------------------------------
enable_login_bind_ip: true #是否将登陆线程和IP绑定
enable_login_bind_device: true #是否将登陆线程和设备绑定
rememberMeDuration: 7 #登录时记住账号时长天数
timeZone: "Asia/Taipei" #需使用 PHP 兼容的时区格式
theme: "tabler" #默认主题
locale: "zh-TW" #默认语言
jump_delay: 1200 #跳转延时，单位ms
keep_connect: false #流量耗尽用户限速至 1Mbps

# cdn.jsdelivr.net / fastly.jsdelivr.net / testingcf.jsdelivr.net
jsdelivr_url: "fastly.jsdelivr.net"

# https://sentry.io for production debugging
sentry_dsn: ""

# Maxmind GeoIP2 database
maxmind_license_key: ""
geoip_locale: "en"

# Large language model powered ticket reply and more
llm_backend: "openai" #openai/google-ai/huggingface/cf-workers-ai
# OpenAI ChatGPT
openai_api_key: ""
openai_model: "gpt-4-turbo-preview"
# Google AI API
google_ai_api_key: ""
google_ai_model_id: "gemini-pro"
# Vertex AI API
vertex_ai_access_token: ""
vertex_ai_location: "us-central1"
vertex_ai_model_id: "gemini-pro"
vertex_ai_project_id: ""
# Hugging Face Inference API
huggingface_api_key: ""
huggingface_endpoint_url: ""
# Cloudflare Workers AI
cf_workers_ai_account_id: ""
cf_workers_ai_api_token: ""
cf_workers_ai_model_id: "@cf/meta/llama-2-7b-chat-int8"

# ClientDownload 命令解决 API 访问频率高而被限制使用的 Github access token
github_access_token: ""

# use Cloudflare R2 for clients download
enable_r2_client_download: false
r2_bucket_name: ""
r2_account_id: ""
r2_access_key_id: ""
r2_access_key_secret: ""
r2_client_download_timeout: 10
